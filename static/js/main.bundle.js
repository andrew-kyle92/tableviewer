(()=>{"use strict";var __webpack_modules__={56:(module,__unused_webpack_exports,__webpack_require__)=>{eval('\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n  if (nonce) {\n    styleElement.setAttribute("nonce", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTYuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLGNBQWMsS0FBd0MsR0FBRyxzQkFBaUIsR0FBRyxDQUFJO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YWJsZXZpZXdlci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcz9kZGNlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///56\n')},72:module=>{eval('\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = "".concat(id, " ").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzIuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHdCQUF3QjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixpQkFBaUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw0QkFBNEI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiw2QkFBNkI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YWJsZXZpZXdlci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcz8yZGJhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///72\n')},113:module=>{eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGFibGV2aWV3ZXIvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcz8xZGRlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///113\n")},208:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(354);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.owner-remove-btn {\r\n    position: relative;\r\n}\r\n\r\n.owner-remove-btn .tooltiptext {\r\n  visibility: hidden;\r\n  width: 120px;\r\n  background-color: black;\r\n  color: #fff;\r\n  text-align: center;\r\n  border-radius: 6px;\r\n  padding: 5px 0;\r\n  position: absolute;\r\n  z-index: 1;\r\n  top: -5px;\r\n  left: 110%;\r\n}\r\n\r\n.owner-remove-btn .tooltiptext::after {\r\n  content: "";\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 100%;\r\n  margin-top: -5px;\r\n  border-width: 5px;\r\n  border-style: solid;\r\n  border-color: transparent black transparent transparent;\r\n}\r\n.owner-remove-btn:hover .tooltiptext {\r\n  visibility: visible;\r\n}\r\n\r\n.important-text {\r\n    color: red;\r\n    font-style: italic;\r\n}\r\n\r\n.disabled {\r\n    cursor: not-allowed;\r\n}\r\n\r\n.current-value {\r\n    color: #747474;\r\n    font-size: 15px;\r\n}\r\n\r\n@keyframes success {\r\n    0% {background-color: inherit;}\r\n    25% {background-color: #006b1b;}\r\n    75% {background-color: inherit;}\r\n}\r\n\r\n.flash-success {\r\n    background-color: inherit;\r\n    animation-name: success;\r\n    animation-duration: 0.5s;\r\n    animation-iteration-count: 1;\r\n}\r\n\r\n.fade-out {\r\n    opacity: 0;\r\n    transition: all 1s linear;\r\n}\r\n\r\n.iframe-container {\r\n  position: relative;\r\n  overflow: hidden;\r\n  width: 100%;\r\n  padding-top: 56.25%; /* 16:9 Aspect Ratio (divide 9 by 16 = 0.5625) */\r\n}\r\n\r\n/* Then style the iframe to fit in the container div with full height and width */\r\n.responsive-iframe {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.form-section-title {\r\n    background-color: #6c757d;\r\n}\r\n\r\n.hidden {\r\n    display: none;\r\n}\r\n\r\n/* ********** Autocomplete ********** */\r\n.readonly {\r\n  background-color: #e9ecef;\r\n  opacity: 1;\r\n  cursor: not-allowed;\r\n}\r\n\r\n#autocomplete-div {\r\n  background: #fff;\r\n  border: #AFB8D0 solid;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: auto;\r\n  max-height: 200px;\r\n  position: absolute;\r\n  z-index: 1;\r\n}\r\n\r\n.autocomplete-item {\r\n  font-size: 18px;\r\n  padding: 1px 4px;\r\n}\r\n\r\n.autocomplete-item:hover {\r\n  background: #444;\r\n  color: #fff;\r\n  cursor: pointer;\r\n}\r\n\r\n.focused-option {\r\n  background-color: #444;\r\n  color: #fff;\r\n}\r\n\r\n#usersDiv {\r\n  background: var(--bs-light);\r\n  border-radius: 0.5em;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.3rem;\r\n  position: absolute;\r\n  width: 75%;\r\n}\r\n\r\n.user-dropdown-item {\r\n  border-radius: 0.2em;\r\n  color: var(--bs-dark);\r\n  padding: 0.2rem;\r\n}\r\n\r\n.user-dropdown-item:hover {\r\n  background: var(--bs-dark);\r\n  color: var(--bs-light);\r\n}\r\n\r\n.active-item {\r\n  background: var(--bs-gray-800);\r\n  color: var(--bs-light);\r\n}`, "",{"version":3,"sources":["webpack://./src/style.css"],"names":[],"mappings":"AAAA;IACI,kBAAkB;AACtB;;AAEA;EACE,kBAAkB;EAClB,YAAY;EACZ,uBAAuB;EACvB,WAAW;EACX,kBAAkB;EAClB,kBAAkB;EAClB,cAAc;EACd,kBAAkB;EAClB,UAAU;EACV,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,QAAQ;EACR,WAAW;EACX,gBAAgB;EAChB,iBAAiB;EACjB,mBAAmB;EACnB,uDAAuD;AACzD;AACA;EACE,mBAAmB;AACrB;;AAEA;IACI,UAAU;IACV,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,IAAI,yBAAyB,CAAC;IAC9B,KAAK,yBAAyB,CAAC;IAC/B,KAAK,yBAAyB,CAAC;AACnC;;AAEA;IACI,yBAAyB;IACzB,uBAAuB;IACvB,wBAAwB;IACxB,4BAA4B;AAChC;;AAEA;IACI,UAAU;IACV,yBAAyB;AAC7B;;AAEA;EACE,kBAAkB;EAClB,gBAAgB;EAChB,WAAW;EACX,mBAAmB,EAAE,gDAAgD;AACvE;;AAEA,iFAAiF;AACjF;EACE,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,SAAS;EACT,QAAQ;EACR,WAAW;EACX,YAAY;AACd;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,aAAa;AACjB;;AAEA,uCAAuC;AACvC;EACE,yBAAyB;EACzB,UAAU;EACV,mBAAmB;AACrB;;AAEA;EACE,gBAAgB;EAChB,qBAAqB;EACrB,kBAAkB;EAClB,aAAa;EACb,sBAAsB;EACtB,cAAc;EACd,iBAAiB;EACjB,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;EAChB,WAAW;EACX,eAAe;AACjB;;AAEA;EACE,sBAAsB;EACtB,WAAW;AACb;;AAEA;EACE,2BAA2B;EAC3B,oBAAoB;EACpB,aAAa;EACb,sBAAsB;EACtB,eAAe;EACf,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE,oBAAoB;EACpB,qBAAqB;EACrB,eAAe;AACjB;;AAEA;EACE,0BAA0B;EAC1B,sBAAsB;AACxB;;AAEA;EACE,8BAA8B;EAC9B,sBAAsB;AACxB","sourcesContent":[".owner-remove-btn {\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.owner-remove-btn .tooltiptext {\\r\\n  visibility: hidden;\\r\\n  width: 120px;\\r\\n  background-color: black;\\r\\n  color: #fff;\\r\\n  text-align: center;\\r\\n  border-radius: 6px;\\r\\n  padding: 5px 0;\\r\\n  position: absolute;\\r\\n  z-index: 1;\\r\\n  top: -5px;\\r\\n  left: 110%;\\r\\n}\\r\\n\\r\\n.owner-remove-btn .tooltiptext::after {\\r\\n  content: \\"\\";\\r\\n  position: absolute;\\r\\n  top: 50%;\\r\\n  right: 100%;\\r\\n  margin-top: -5px;\\r\\n  border-width: 5px;\\r\\n  border-style: solid;\\r\\n  border-color: transparent black transparent transparent;\\r\\n}\\r\\n.owner-remove-btn:hover .tooltiptext {\\r\\n  visibility: visible;\\r\\n}\\r\\n\\r\\n.important-text {\\r\\n    color: red;\\r\\n    font-style: italic;\\r\\n}\\r\\n\\r\\n.disabled {\\r\\n    cursor: not-allowed;\\r\\n}\\r\\n\\r\\n.current-value {\\r\\n    color: #747474;\\r\\n    font-size: 15px;\\r\\n}\\r\\n\\r\\n@keyframes success {\\r\\n    0% {background-color: inherit;}\\r\\n    25% {background-color: #006b1b;}\\r\\n    75% {background-color: inherit;}\\r\\n}\\r\\n\\r\\n.flash-success {\\r\\n    background-color: inherit;\\r\\n    animation-name: success;\\r\\n    animation-duration: 0.5s;\\r\\n    animation-iteration-count: 1;\\r\\n}\\r\\n\\r\\n.fade-out {\\r\\n    opacity: 0;\\r\\n    transition: all 1s linear;\\r\\n}\\r\\n\\r\\n.iframe-container {\\r\\n  position: relative;\\r\\n  overflow: hidden;\\r\\n  width: 100%;\\r\\n  padding-top: 56.25%; /* 16:9 Aspect Ratio (divide 9 by 16 = 0.5625) */\\r\\n}\\r\\n\\r\\n/* Then style the iframe to fit in the container div with full height and width */\\r\\n.responsive-iframe {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  bottom: 0;\\r\\n  right: 0;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n.form-section-title {\\r\\n    background-color: #6c757d;\\r\\n}\\r\\n\\r\\n.hidden {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n/* ********** Autocomplete ********** */\\r\\n.readonly {\\r\\n  background-color: #e9ecef;\\r\\n  opacity: 1;\\r\\n  cursor: not-allowed;\\r\\n}\\r\\n\\r\\n#autocomplete-div {\\r\\n  background: #fff;\\r\\n  border: #AFB8D0 solid;\\r\\n  border-radius: 5px;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  overflow: auto;\\r\\n  max-height: 200px;\\r\\n  position: absolute;\\r\\n  z-index: 1;\\r\\n}\\r\\n\\r\\n.autocomplete-item {\\r\\n  font-size: 18px;\\r\\n  padding: 1px 4px;\\r\\n}\\r\\n\\r\\n.autocomplete-item:hover {\\r\\n  background: #444;\\r\\n  color: #fff;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.focused-option {\\r\\n  background-color: #444;\\r\\n  color: #fff;\\r\\n}\\r\\n\\r\\n#usersDiv {\\r\\n  background: var(--bs-light);\\r\\n  border-radius: 0.5em;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  padding: 0.3rem;\\r\\n  position: absolute;\\r\\n  width: 75%;\\r\\n}\\r\\n\\r\\n.user-dropdown-item {\\r\\n  border-radius: 0.2em;\\r\\n  color: var(--bs-dark);\\r\\n  padding: 0.2rem;\\r\\n}\\r\\n\\r\\n.user-dropdown-item:hover {\\r\\n  background: var(--bs-dark);\\r\\n  color: var(--bs-light);\\r\\n}\\r\\n\\r\\n.active-item {\\r\\n  background: var(--bs-gray-800);\\r\\n  color: var(--bs-light);\\r\\n}"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///208\n')},314:module=>{eval('\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = "";\n      var needLayer = typeof item[5] !== "undefined";\n      if (item[4]) {\n        content += "@supports (".concat(item[4], ") {");\n      }\n      if (item[2]) {\n        content += "@media ".concat(item[2], " {");\n      }\n      if (needLayer) {\n        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += "}";\n      }\n      if (item[2]) {\n        content += "}";\n      }\n      if (item[4]) {\n        content += "}";\n      }\n      return content;\n    }).join("");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === "string") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== "undefined") {\n        if (typeof item[5] === "undefined") {\n          item[5] = layer;\n        } else {\n          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = "".concat(supports);\n        } else {\n          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzE0LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQ7QUFDckQ7QUFDQTtBQUNBLGdEQUFnRDtBQUNoRDtBQUNBO0FBQ0EscUZBQXFGO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixpQkFBaUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHFCQUFxQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixzRkFBc0YscUJBQXFCO0FBQzNHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixpREFBaUQscUJBQXFCO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixzREFBc0QscUJBQXFCO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YWJsZXZpZXdlci8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanM/MjRmYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///314\n')},354:module=>{eval('\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === "function") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);\n    var sourceMapping = "/*# ".concat(data, " */");\n    return [content].concat([sourceMapping]).join("\\n");\n  }\n  return [content].join("\\n");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzU0LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsY0FBYztBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGFibGV2aWV3ZXIvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcz9hZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///354\n')},540:module=>{eval('\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement("style");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTQwLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YWJsZXZpZXdlci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcz9kZTZjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///540\n')},659:module=>{eval('\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === "undefined") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error("Couldn\'t find a style target. This probably means that the value for the \'insert\' parameter is invalid.");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjU5LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3RhYmxldmlld2VyLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcz9iMjE0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG5cbiAgICAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///659\n')},787:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\nvar injectStylesIntoStyleTag = __webpack_require__(72);\nvar injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleDomAPI.js\nvar styleDomAPI = __webpack_require__(825);\nvar styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(styleDomAPI);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertBySelector.js\nvar insertBySelector = __webpack_require__(659);\nvar insertBySelector_default = /*#__PURE__*/__webpack_require__.n(insertBySelector);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\nvar setAttributesWithoutAttributes = __webpack_require__(56);\nvar setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(setAttributesWithoutAttributes);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertStyleElement.js\nvar insertStyleElement = __webpack_require__(540);\nvar insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(insertStyleElement);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleTagTransform.js\nvar styleTagTransform = __webpack_require__(113);\nvar styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(styleTagTransform);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/style.css\nvar style = __webpack_require__(208);\n;// ./src/style.css\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (styleTagTransform_default());\noptions.setAttributes = (setAttributesWithoutAttributes_default());\noptions.insert = insertBySelector_default().bind(null, "head");\noptions.domAPI = (styleDomAPI_default());\noptions.insertStyleElement = (insertStyleElement_default());\n\nvar update = injectStylesIntoStyleTag_default()(style/* default */.A, options);\n\n\n\n\n       /* harmony default export */ const src_style = (style/* default */.A && style/* default */.A.locals ? style/* default */.A.locals : undefined);\n\n;// ./src/js/functions.js\n// ********** Importing the fetches **********\r\n\r\n\r\n// ********** Getting the csrf token for the fetch calls **********\r\nfunction getCookie(name) {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== \'\') {\r\n        const cookies = document.cookie.split(\';\');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + \'=\')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\nconst functions_csrftoken = getCookie(\'csrftoken\');\r\n\r\n// ********** async functions **********\r\nasync function copyToClipboard(text) {\r\n    await navigator.clipboard.writeText(text);\r\n}\r\n\r\nasync function saveColumn(data, btnParent, tableRow){\r\n    let res = JSON.parse(await fetchSaveColumn(data));\r\n    if (res.errors) {\r\n        writeAlert(res.errors);\r\n        return false;\r\n    }\r\n    else if (res.results.success) {\r\n        let resData = JSON.parse(res.results.data);\r\n        // adding the fields to the correct table cells\r\n        let useColumnTitleCase = resData["use_column"].toString()[0].toUpperCase() + resData["use_column"].toString().substring(1);\r\n        tableRow.children[0].innerText = useColumnTitleCase; // use column cell\r\n        tableRow.children[2].innerText = resData["label"]; // label cell\r\n        // updating the data-column-data data\r\n        let editBtn = btnParent.querySelector(".column-edit-btn");\r\n        editBtn.dataset.columnData = res.results.data;\r\n        // removing the save and cancel buttons\r\n        let saveBtn = btnParent.querySelector("#save-btn");\r\n        let cancelBtn = btnParent.querySelector("#edit-btn");\r\n        btnParent.removeChild(saveBtn);\r\n        btnParent.removeChild(cancelBtn);\r\n        // un-hiding the edit button\r\n        editBtn.hidden = false;\r\n        // flashing the table-row as success\r\n        tableRow.classList.add("flash-success");\r\n        writeAlert("success", "Column saved")\r\n        // setting data-table-editing to false\r\n        tableRow.dataset.tableEditing = "false";\r\n    }\r\n}\r\n\r\nasync function addURLShortcut(shortcutData) {\r\n    // getting the domain name\r\n    let res = JSON.parse(await fetchDomainName());\r\n    let domainName = res["domainName"];\r\n    // parentDiv\r\n    let parentDiv = document.getElementById("url-shortcuts");\r\n    // creating the shortcut structure\r\n    // - outer div\r\n    let shortcutDiv = document.createElement("div");\r\n    shortcutDiv.className = "input-group mb-3";\r\n    shortcutDiv.id = `shortcut-${shortcutData.id}`;\r\n    parentDiv.appendChild(shortcutDiv);\r\n    // - domain span\r\n    let domainSpan = document.createElement("span");\r\n    domainSpan.className = "input-group-text";\r\n    domainSpan.innerText = domainName;\r\n    shortcutDiv.appendChild(domainSpan);\r\n    let afterDomainP = document.createElement(\'p\');\r\n    afterDomainP.className = "my-auto mx-1";\r\n    afterDomainP.innerText = "/";\r\n    shortcutDiv.appendChild(afterDomainP);\r\n    // - shortcut path split iteration\r\n    let shortcutSplit = shortcutData.url.split(\'/\');\r\n    for (let i = 0; i< shortcutSplit.length; i++) {\r\n        let path = shortcutSplit[i];\r\n        let span = document.createElement("span");\r\n        span.className = "input-group-text";\r\n        span.innerText = path;\r\n        shortcutDiv.appendChild(span);\r\n        let p = document.createElement(\'p\');\r\n        p.className = "my-auto mx-1";\r\n        p.innerText = "/";\r\n        shortcutDiv.appendChild(p);\r\n    }\r\n    // - copy button\r\n    let copyBtn = document.createElement("button");\r\n    copyBtn.className = "copy-url-button btn btn-outline-secondary";\r\n    copyBtn.dataset.urlId = shortcutData.id;\r\n    copyBtn.dataset.link = domainName + "/" + shortcutData.url;\r\n    copyBtn.innerHTML = `<i class="fa-solid fa-copy"></i>`;\r\n    shortcutDiv.appendChild(copyBtn)\r\n    // adding the listener\r\n    addCopyListener(copyBtn);\r\n    // - delete button\r\n    let deleteBtn = document.createElement("button");\r\n    deleteBtn.className = "delete-url-btn btn btn-outline-secondary";\r\n    deleteBtn.dataset.urlId = shortcutData.id;\r\n    deleteBtn.innerHTML = `<i class="fa-solid fa-trash"></i>`;\r\n    shortcutDiv.appendChild(deleteBtn);\r\n    // adding the listener\r\n    addDeleteListener(deleteBtn);\r\n}\r\n\r\n// ********** Script functions **********\r\nfunction addCopyListener(element) {\r\n    element.addEventListener("click", async () => {\r\n       let copyText = element.dataset.link;\r\n       await copyToClipboard(copyText);\r\n       writeAlert("success", "Shortcut copied!");\r\n    });\r\n}\r\n\r\nfunction addDeleteListener(element) {\r\n    element.addEventListener("click", async () => {\r\n        let shortcutId = element.dataset.urlId;\r\n        let res = JSON.parse(await fetchRemoveShortcut(shortcutId));\r\n        if(res.success === true) {\r\n            let parentDiv = document.getElementById("url-shortcuts");\r\n            parentDiv.removeChild(element.parentNode);\r\n            writeAlert("success", "Shortcut deleted!");\r\n        } else {\r\n            writeAlert("warning", res.error);\r\n        }\r\n\r\n    });\r\n}\r\n\r\nfunction searchTable(id, keyword, column) {\r\n    let url = document.URL.includes("tableviewer") ? `/tableviewer/tables/search-table/${id}/` : `/tables/search-table/${id}/`;\r\n    url = url + \'?\' + new URLSearchParams({"s": keyword, "c": column});\r\n    window.location = url;\r\n}\r\n\r\nfunction writeAlert(tag, msg) {\r\n    // adding an alert to the top of the screen\r\n    let alert = document.createElement("div");\r\n    alert.className = `alert alert-${tag} alert-dismissible fade show fixed-top w-25 mt-3 m-auto`;\r\n    alert.role = "alert";\r\n    alert.innerHTML = `${msg}<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>`;\r\n    document.body.appendChild(alert);\r\n    setTimeout(() => {\r\n        alert.classList.add("fade-out");\r\n        setTimeout(() => {\r\n            document.body.removeChild(alert);\r\n        }, 1000)\r\n    }, 3000);\r\n}\r\n\r\nfunction cancelEdit(editBtn, tableRow) {\r\n    // btns parent\r\n    let btnParent = editBtn.parentElement;\r\n    // getting the current data\r\n    let currentData = JSON.parse(editBtn.dataset.columnData);\r\n    // restoring the current values to the respective cells\r\n    let useColumnTitleCase = currentData["use_column"].toString()[0].toUpperCase() + currentData["use_column"].toString().substring(1);\r\n    tableRow.children[0].innerHTML = useColumnTitleCase;\r\n    tableRow.children[2].innerHTML = currentData["label"];\r\n    // removing the save and cancel buttons\r\n    let saveBtn = btnParent.querySelector("#save-btn");\r\n    let cancelBtn = btnParent.querySelector("#edit-btn");\r\n    btnParent.removeChild(saveBtn);\r\n    btnParent.removeChild(cancelBtn);\r\n    // un-hiding the edit button\r\n    editBtn.hidden = false;\r\n    // setting data-table-editing to false\r\n    tableRow.dataset.tableEditing = "false";\r\n}\r\n\r\n// ********** Reference function calls **********\r\nconst inlineUpdate = async (func, data) => {\r\n\r\n}\n;// ./src/js/fetches.js\n// ********** Imports **********\r\n\r\n\r\n// ********** Fetch Requests **********\r\nconst fetchSaveColumn = async (data) => {\r\n    let url = document.URL.includes("tableviewer") ? \'/tableviewer/save-column/\' : \'/save-column/\';\r\n    return await fetch(url, {\r\n        method: "POST",\r\n        credentials: "same-origin",\r\n        headers: {\r\n            "X-CSRFToken": functions_csrftoken,\r\n        },\r\n        body: JSON.stringify(data),\r\n    }).then(async (response) => {\r\n        return response.json();\r\n    });\r\n}\r\n\r\nconst fetchRegenerateColumns = async (table_id) => {\r\n    let url = document.URL.includes("tableviewer") ? `/tableviewer/regenerate-columns/${table_id}` : `/regenerate-columns${table_id}`;\r\n    return await fetch(url, {\r\n        method: "GET",\r\n        credentials: "same-origin",\r\n        headers: {\r\n            "X-CSRFToken": functions_csrftoken,\r\n        },\r\n    }).then(async (response) => {\r\n        return response.json();\r\n    });\r\n}\r\n\r\nconst fetchAddUrlShortcut = async (table_id, shortcut) => {\r\n    let url = document.URL.includes("tableviewer") ? `/tableviewer/add-url-shortcut/${table_id}` : `/add-url-shortcut/${table_id}`;\r\n    url = url + "?" + new URLSearchParams({shortcut: shortcut});\r\n    return fetch(url, {\r\n        method: "GET",\r\n        credentials: "same-origin",\r\n        headers: {\r\n            "X-CSRSToken": functions_csrftoken\r\n        }\r\n    }).then(async response => {\r\n        return response.json();\r\n    });\r\n}\r\n\r\nconst fetchRemoveShortcut = async (shortcutId) => {\r\n    let url = document.URL.includes("tableviewer") ? `/tableviewer/remove-shortcut/` : `/remove-shortcut/`;\r\n    url = url + "?" + new URLSearchParams({"shortcutId": shortcutId});\r\n    return fetch(url, {\r\n       method: "GET",\r\n       credentials: "same-origin",\r\n       headers: {\r\n           "X-CSRFToken": functions_csrftoken\r\n       }\r\n    }).then(async response => {\r\n        return response.json();\r\n    });\r\n}\r\n\r\nconst fetchDomainName = async () => {\r\n    let url = document.URL.includes("tableviewer") ? `/tableviewer/get-domain-name/` : `/get-domain-name/`;\r\n    return fetch(url, {\r\n       method: "GET",\r\n       credentials: "same-origin",\r\n       headers: {\r\n           "X-CSRFToken": functions_csrftoken\r\n       }\r\n    }).then(async response => {\r\n        return response.json();\r\n    });\r\n}\r\n\r\nconst saveTableSettings = async (data) => {\r\n    let url = document.URL.includes("tableviewer") ? `/tableviewer/save-table-settings/` : `/save-table-settings/`;\r\n    return await fetch(url, {\r\n        method: "POST",\r\n        credentials: "same-origin",\r\n        headers: {\r\n            "X-CSRFToken": functions_csrftoken,\r\n        },\r\n        body: JSON.stringify(data),\r\n    }).then(async (response) => {\r\n        return response.json();\r\n    });\r\n}\r\n\r\nconst saveMemberToGroup = async (userId, groupId) => {\r\n    let url = document.URL.includes("tableviewer") ? `/tableviewer/administration/change-user-membership/` : `/administration/change-user-membership/`;\r\n    url = url + "?" + new URLSearchParams(\r\n        {\r\n            user_id: userId,\r\n            group_id: groupId,\r\n            change_type: "add",\r\n            membership: "member",\r\n        }\r\n    );\r\n    return fetch(url, {\r\n       method: "GET",\r\n       credentials: "same-origin",\r\n       headers: {\r\n           "X-CSRFToken": functions_csrftoken\r\n       }\r\n    }).then(async response => {\r\n        return response.json();\r\n    });\r\n}\r\n\r\nconst saveOwnerToGroup = async (memberId, groupId) => {\r\n    let url = document.URL.includes("tableviewer") ? `/tableviewer/administration/save-to-group/` : `/administration/save-to-group/`;\r\n    url = url + "?" + new URLSearchParams({memberId: memberId, groupId: groupId, membership: "owner"});\r\n    return fetch(url, {\r\n       method: "GET",\r\n       credentials: "same-origin",\r\n       headers: {\r\n           "X-CSRFToken": csrftoken\r\n       }\r\n    }).then(async response => {\r\n        return response.json();\r\n    });\r\n}\r\n\r\nconst removeMemberFromGroup = async (userId, groupId, membership, fullRemove=false) => {\r\n    let url = document.URL.includes("tableviewer") ? `/tableviewer/administration/change-user-membership/` : `/administration/change-user-membership/`;\r\n    url = url + "?" + new URLSearchParams(\r\n        {\r\n            user_id: userId,\r\n            group_id: groupId,\r\n            change_type: "remove",\r\n            membership: membership,\r\n            full_remove: fullRemove,\r\n        }\r\n    );\r\n    return fetch(url, {\r\n       method: "GET",\r\n       credentials: "same-origin",\r\n       headers: {\r\n           "X-CSRFToken": csrftoken\r\n       }\r\n    }).then(async response => {\r\n        return response.json();\r\n    });\r\n}\r\n\r\nconst fetchLdapUsers = async (searchQuery) => {\r\n    let urlPath = new URL(document.URL).pathname.includes("tableviewer") ? \'/tableviewer/administration/fetch-ldap-users/?\': \'/administration/fetch-ldap-users/?\';\r\n    let url = urlPath + new URLSearchParams({\r\n       "q": searchQuery\r\n    });\r\n\r\n    return await fetch(url, {\r\n        method: "GET",\r\n        credentials: "same-origin",\r\n        headers: {\r\n            "Accept": "application/json",\r\n            "Content-Type": "application/json",\r\n            "X-Requested-With": "XMLHttpRequest",\r\n            "X-CSRFToken": functions_csrftoken\r\n        }\r\n    }).then(async (response) => {\r\n            return response.json();\r\n    });\r\n}\r\n\r\nconst checkUserExists = async (filterBy) => {\r\n    let url = new URL(document.URL).pathname.includes("tableviewer") ? \'/tableviewer/administration/check-user-exists/\': \'/administration/check-user-exists/\';\r\n\r\n    return await fetch(url, {\r\n        method: "POST",\r\n        credentials: "same-origin",\r\n        headers: {\r\n            "Accept": "application/json",\r\n            "Content-Type": "application/json",\r\n            "X-Requested-With": "XMLHttpRequest",\r\n            "X-CSRFToken": functions_csrftoken\r\n        },\r\n        body: JSON.stringify(filterBy),\r\n    }).then(async (response) => {\r\n            return response.json();\r\n    });\r\n}\r\n\r\nconst getInstances =  async (queryData) => {\r\n    let url = new URL(document.URL).pathname.includes("tableviewer") ? \'/tableviewer/administration/get-instances/\': \'/administration/get-instances/\';\r\n    let fullUrl = url + "?" + new URLSearchParams({\r\n       "type": queryData.type,\r\n        "filter": queryData.filter,\r\n        "q": queryData.q,\r\n    });\r\n    return await fetch(fullUrl, {\r\n        method: "GET",\r\n        credentials: "same-origin",\r\n        headers: {\r\n            "X-CSRFToken": functions_csrftoken,\r\n        }\r\n    }).then(async (response) => {\r\n        return response.json();\r\n    });\r\n}\n;// ./src/js/main.js\n// ********** Imports **********\r\n\r\n\r\n\r\n// ********** Script Variables **********\r\n// ***** Logic for editing table columns on the table-details view *****\r\nlet currentURL = new URL(document.URL);\r\n\r\n// ********** Main Content **********\r\nwindow.addEventListener(\'DOMContentLoaded\', function () {\r\n    // ##### show password button\r\n    if (document.URL.includes("login")) {\r\n        let eyeBtn = document.getElementById("eye-btn");\r\n        let passwordInput = document.getElementById("id_password");\r\n        eyeBtn.addEventListener("click", () => {\r\n            let isHidden = eyeBtn.dataset.status === "hidden";\r\n            if (isHidden) {\r\n                passwordInput.type = "text";\r\n                eyeBtn.dataset.status = "revealed";\r\n                eyeBtn.innerHTML = "<i class=\'fa-solid fa-eye-slash\'></i>";\r\n            } else {\r\n                passwordInput.type = "password";\r\n                eyeBtn.dataset.status = "hidden";\r\n                eyeBtn.innerHTML = "<i class=\'fa-solid fa-eye\'></i>"\r\n            }\r\n        });\r\n    }\r\n    // ################################################################################\r\n\r\n    // making sure the correct we\'re on the correct page\r\n    if (currentURL.pathname.includes(\'tables/detail\')) {\r\n        // getting all column edit buttons\r\n        let editColumnBtns = document.querySelectorAll(\'.column-edit-btn\');\r\n        // adding a listener to each button\r\n        editColumnBtns.forEach(function (btn) {\r\n            btn.addEventListener(\'click\', () => {\r\n                // getting the column data attribute\r\n                let columnData = JSON.parse(btn.dataset.columnData);\r\n                // getting all table-datas (td) within the table-row (tr)\r\n                let tableRow = btn.parentElement.parentElement;\r\n                // setting data-editing attribute to true\r\n                tableRow.dataset.tableEditing = \'true\';\r\n                // creating a JSON object for each editable table column\r\n                // which should only be indexes 0 and 2\r\n                let currentActive = tableRow.children[0].innerText === "True";\r\n                let editableColumns = {\r\n                    0: {current: tableRow.children[0].innerText, new: `<input id=\'use_column_new-${columnData["id"]}\' class=\'form-check-input\' type=\'checkbox\'>`},\r\n                    2: {current: tableRow.children[2].innerText, new: `<input id=\'label_new-${columnData["id"]}\' class=\'form-control\' type=\'text\' value="${tableRow.children[2].innerText}">`}\r\n                }\r\n                for (let key in editableColumns) {\r\n                    tableRow.children[key].innerHTML = "<div class=\'current-value\'>Current:<br>" + editableColumns[key].current + "</div>New:<br>" + editableColumns[key].new;\r\n                    if (currentActive) {\r\n                        let newCheckBox = document.getElementById(`use_column_new-${columnData["id"]}`)\r\n                        newCheckBox.checked = true;\r\n                    }\r\n                }\r\n\r\n                // creating a cancel and save button and hiding the edit button\r\n                let editBtnParent = btn.parentElement;\r\n                // hiding the edit button\r\n                btn.hidden = true;\r\n                // save button\r\n                let saveBtn = document.createElement("button");\r\n                saveBtn.id = "save-btn";\r\n                saveBtn.className = "btn btn-primary btn-sm me-2";\r\n                saveBtn.type = "button";\r\n                saveBtn.innerText = "Save"\r\n                editBtnParent.appendChild(saveBtn);\r\n                // cancel button\r\n                let cancelBtn = document.createElement("button");\r\n                cancelBtn.id = "edit-btn";\r\n                cancelBtn.className = "btn btn-secondary btn-sm";\r\n                cancelBtn.type = "button";\r\n                cancelBtn.innerText = "Cancel"\r\n                editBtnParent.appendChild(cancelBtn);\r\n                // adding the button logic\r\n                saveBtn.addEventListener("click", async () => {\r\n                    let newUseColumnInput = document.getElementById(`use_column_new-${columnData[\'id\']}`);\r\n                    let newLabelInput = document.getElementById(`label_new-${columnData[\'id\']}`);\r\n                    let colData = {\r\n                        id: columnData["id"],\r\n                        use_column: newUseColumnInput.checked,\r\n                        label: newLabelInput.value === \'\' ? columnData["label"] : newLabelInput.value\r\n                    }\r\n                    await saveColumn(colData, btn.parentElement, tableRow);\r\n                    // reloading the iframe to reflect the changes\r\n                    let previewIframe = document.getElementById("table-preview-iframe");\r\n                    previewIframe.contentWindow.location.reload();\r\n                });\r\n\r\n                cancelBtn.addEventListener("click", () => {\r\n                    cancelEdit(btn, tableRow);\r\n                });\r\n            });\r\n        });\r\n\r\n        // ***** Button Logic *****\r\n        // regenerate column headers\r\n        let regenerateBtn = document.getElementById("regenerate-columns-btn");\r\n        regenerateBtn.addEventListener("click", async () => {\r\n            let tableId = regenerateBtn.dataset.tableId;\r\n            let res = JSON.parse(await fetchRegenerateColumns(tableId));\r\n            if (res.success) {\r\n                window.location.reload();\r\n            }\r\n            else {\r\n                writeAlert("error", res.error);\r\n            }\r\n        });\r\n\r\n        // add url shortcut\r\n        let addURLBtn = document.getElementById("add-url-btn");\r\n        let addURLInput = document.getElementById("new-url");\r\n        addURLBtn.addEventListener("click", async () => {\r\n            let tableId = addURLBtn.dataset.tableId;\r\n            let results = JSON.parse(await fetchAddUrlShortcut(tableId, addURLInput.value));\r\n            if (results.success === true) {\r\n                await addURLShortcut(results.instance);\r\n                writeAlert("success", "URL Shortcut added");\r\n                addURLInput.value = "";\r\n            }\r\n            else {\r\n                writeAlert("warning", results.error);\r\n            }\r\n        });\r\n\r\n        // copy URL to clipboard\r\n        let copyBtns = document.getElementsByClassName("copy-url-btn");\r\n        for (let i = 0; i < copyBtns.length; i++) {\r\n            copyBtns[i].addEventListener("click", async () => {\r\n               let copyText = copyBtns[i].dataset.link;\r\n               await copyToClipboard(copyText);\r\n               writeAlert("success", "Shortcut copied!");\r\n            });\r\n        }\r\n\r\n        // remove shortcut\r\n        let deleteBtns = document.getElementsByClassName("delete-url-btn");\r\n        for (let i = 0; i < deleteBtns.length; i++) {\r\n            deleteBtns[i].addEventListener("click", async () => {\r\n                let shortcutId = deleteBtns[i].dataset.urlId;\r\n                let res = JSON.parse(await fetchRemoveShortcut(shortcutId));\r\n                if(res.success === true) {\r\n                    let parentDiv = document.getElementById("url-shortcuts");\r\n                    parentDiv.removeChild(deleteBtns[i].parentNode);\r\n                    writeAlert("success", "Shortcut deleted!");\r\n                } else {\r\n                    writeAlert("warning", res.error);\r\n                }\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    if (currentURL.pathname.includes("tables/detail") || currentURL.pathname.includes("administration/view-group") || currentURL.pathname.includes("administration/")) {\r\n        // ***** Tabs logic *****\r\n        let tabs = document.getElementsByClassName("tab-btn");\r\n        let tabContents = document.getElementsByClassName("tab-content");\r\n        // adding an event listener to each btn\r\n        for (let i = 0; i < tabs.length; i++) {\r\n            let tab = tabs[i];\r\n            let contentId = tab.dataset.target;\r\n            tab.addEventListener("click", () => {\r\n                tab.classList.add("active");\r\n                // un-hiding the tab content\r\n                let tabContent = document.getElementById(contentId);\r\n                let isHidden = tabContent.dataset.hidden === "true";\r\n                if (isHidden) {\r\n                    tabContent.classList.remove("hidden");\r\n                    tabContent.dataset.hidden = "false";\r\n                }\r\n                // hiding all other tabs\r\n                for (let j = 0; j < tabContents.length; j++) {\r\n                    let t = tabContents[j];\r\n                    if (t.id !== contentId && t.dataset.hidden === "false") {\r\n                        t.dataset.hidden = "true";\r\n                        t.classList.add("hidden");\r\n                    }\r\n                }\r\n                // setting other tabs as non-active\r\n                for (let j = 0; j < tabs.length; j++) {\r\n                    let tBtn = tabs[j];\r\n                    if (tBtn.className.includes("active") && tBtn.id !== tab.id) {\r\n                        tBtn.classList.remove("active");\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    if (currentURL.pathname.includes(\'tables/view\') || currentURL.pathname.includes("tables/search-table")) {\r\n        // search mechanic\r\n        let searchBtn = document.getElementById("searchBtn");\r\n        let searchInput = document.getElementById("searchInput");\r\n        let searchDropdown = document.getElementById("searchSelect");\r\n        searchBtn.addEventListener("click", () => {\r\n            let id = searchBtn.dataset.table;\r\n            let keyword = searchInput.value;\r\n            let column = searchDropdown.value;\r\n            searchTable(id, keyword, column);\r\n        });\r\n    }\r\n});\n;// ./src/js/table_settings.js\n// ********** Imports **********\r\n\r\n\r\n\r\n\r\n// ********** Main Logic **********\r\nif (currentURL.pathname.includes(\'tables/detail\')) {\r\n    window.addEventListener(\'DOMContentLoaded\', function () {\r\n        // settings configuration elements\r\n        let tableSettings = document.getElementsByClassName("table-setting");\r\n        for (let i = 0; i < tableSettings.length; i++) {\r\n            let tableSetting = tableSettings[i];\r\n            tableSetting.addEventListener("change", async () => {\r\n                // let valueChanged = tableSetting.dataset.valueChanged === "false";\r\n                let tableSettingValue = tableSetting.checked ? "true" : "false";\r\n                if (tableSettingValue !== tableSetting.dataset.currentValue) {\r\n                    tableSetting.dataset.valueChanged = "true";\r\n                } else {\r\n                    tableSetting.dataset.valueChanged = "false";\r\n                }\r\n            });\r\n        }\r\n\r\n        // Save button logic\r\n        let saveBtn = document.getElementById("settings-save-btn");\r\n        saveBtn.addEventListener("click", async () => {\r\n            let tableSettings = document.getElementsByClassName("table-setting");\r\n            let changedData = {id: parseInt(saveBtn.dataset.settings)}; // dictionary of db values that need to be updated\r\n            let changedInputs = []; // list of HTML inputs\r\n            for (let i = 0; i < tableSettings.length; i++) {\r\n                let tableSetting = tableSettings[i];\r\n                if (tableSetting.dataset.valueChanged === "true") {\r\n                    switch (tableSetting.id) {\r\n                        case "publishedInput":\r\n                            changedData.published = !!tableSetting.checked; // adding to changedData object\r\n                            changedInputs.push(tableSetting); // adding to changedInputs array\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            // saving the changes to the database\r\n            let res = JSON.parse(await saveTableSettings(changedData));\r\n            if (res.success) {\r\n                writeAlert("success", "Settings saved");\r\n                for (let i = 0; i < changedInputs.length; i++) {\r\n                    changedInputs[i].dataset.valueChanged = "false";\r\n                }\r\n            }\r\n            else {\r\n                writeAlert("warning", res.error);\r\n            }\r\n        });\r\n    });\r\n}\n;// ./src/js/autocomplete.js\n// ********** Imports **********\r\n\r\n\r\n// ########## Intellisense Logic ##########\r\n// ##### Script functions #####\r\nasync function userExists(userData) {\r\n    // Calls the fetch call checkUserExists to verify\r\n    // if the user already exists in our database\r\n    // data return: {\'exists\': <boolean>}\r\n    let user = await fetches.checkUserExists(userData);\r\n\r\n    // checking the exists key\r\n    return user.exists;\r\n}\r\n\r\nfunction addError(msg) {\r\n    // getting the search input\r\n    let searchInput = document.getElementsByClassName(\'auto-input\')[0];\r\n    // getting the search input\'s parent\r\n    let parent = searchInput.parentElement;\r\n    // checking to see if the error already exists\r\n    let errorMsg = document.querySelectorAll(\'[data-user-exists]\')[0];\r\n    if (!errorMsg) {\r\n        // creating the error p element\r\n        let errorP = document.createElement(\'p\');\r\n        errorP.setAttribute(\'class\', \'error-msg\');\r\n        errorP.dataset.userExists = \'true\';\r\n        errorP.innerText = msg;\r\n        parent.appendChild(errorP);\r\n\r\n        // adding the validation-error class to the parent\r\n        parent.classList.add(\'validation-error\');\r\n    }\r\n}\r\n\r\n// ##### Main Logic #####\r\nconst mainInput = document.getElementsByClassName("auto-input")[0];\r\nconst mainInputParent = mainInput ? mainInput.parentElement: null;\r\nconst usernameInput = document.getElementById("id_username");\r\nconst firstnameInput = document.getElementById("id_first_name");\r\nconst lastnameInput = document.getElementById("id_last_name");\r\nconst emailInput = document.getElementById("id_email");\r\n\r\nif (mainInput) {\r\n    let getIntellisense = async (queryParams) => {\r\n        return await fetchLdapUsers(queryParams);\r\n    }\r\n\r\n    var users = null;\r\n    // creating autocomplete functionality\r\n    var timer, timeoutVal = 500;\r\n    mainInput.addEventListener("keypress", () => {\r\n        // clearing the timer everytime a key pressed\r\n        window.clearTimeout(timer);\r\n    });\r\n    // adding keydown logic when using the up and down arrow keys, space, and enter key\r\n    mainInput.addEventListener("keydown", async (e) => {\r\n        if(e.code === "ArrowDown"){\r\n            let autoCompleteItems = document.getElementsByClassName("autocomplete-item");\r\n            let focusedOption = document.getElementsByClassName("focused-option")[0];\r\n            if(autoCompleteItems.length > 0){\r\n                if(!focusedOption){\r\n                    autoCompleteItems[0].classList.add("focused-option");\r\n                }\r\n                else{\r\n                    for(let i = 0; i < autoCompleteItems.length; i++){\r\n                        if(autoCompleteItems[i].getAttribute("name") === focusedOption.getAttribute("name")){\r\n                            autoCompleteItems[i].classList.remove("focused-option");\r\n                            if(i + 1 >= autoCompleteItems.length){\r\n                                autoCompleteItems[0].classList.add("focused-option");\r\n                                autoCompleteItems[0].scrollIntoView({ behavior: "smooth", block: "end", "inline": "nearest"});\r\n                            }\r\n                            else{\r\n                                let nextItem = autoCompleteItems[i + 1];\r\n                                nextItem.classList.add("focused-option");\r\n                                nextItem.scrollIntoView({ behavior: "smooth", block: "end", "inline": "nearest"});\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if(e.code === "ArrowUp") {\r\n            let autoCompleteItems = document.getElementsByClassName("autocomplete-item");\r\n            let focusedOption = document.getElementsByClassName("focused-option")[0];\r\n            if (autoCompleteItems.length > 0) {\r\n                if (!focusedOption) {\r\n                    autoCompleteItems[autoCompleteItems.length - 1].classList.add("focused-option");\r\n                    autoCompleteItems[autoCompleteItems.length - 1].scrollIntoView({\r\n                                    behavior: "smooth",\r\n                                    block: "end",\r\n                                    "inline": "nearest"\r\n                                });\r\n                } else {\r\n                    for (let i = 0; i < autoCompleteItems.length; i++) {\r\n                        if (autoCompleteItems[i].getAttribute("name") === focusedOption.getAttribute("name")) {\r\n                            autoCompleteItems[i].classList.remove("focused-option");\r\n                            if (i - 1 < 0) {\r\n                                autoCompleteItems[autoCompleteItems.length - 1].classList.add("focused-option");\r\n                                autoCompleteItems[autoCompleteItems.length - 1].scrollIntoView({\r\n                                    behavior: "smooth",\r\n                                    block: "end",\r\n                                    "inline": "nearest"\r\n                                });\r\n                            } else {\r\n                                let nextItem = autoCompleteItems[i - 1];\r\n                                nextItem.classList.add("focused-option");\r\n                                nextItem.scrollIntoView({behavior: "smooth", block: "start", "inline": "nearest"});\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if(e.code === "Enter"){\r\n            // preventing default behavior\r\n            e.preventDefault();\r\n\r\n            let focusedOption = document.getElementsByClassName("focused-option")[0];\r\n            if(focusedOption){\r\n                for(let i = 0; i < users.length; i++){\r\n                    if(users[i].name === focusedOption.getAttribute("name")){\r\n                        let userData = users[i];\r\n                        mainInput.value = userData["name"];\r\n                        usernameInput.value = userData["username"];\r\n                        firstnameInput.value = userData["first_name"];\r\n                        lastnameInput.value = userData["last_name"];\r\n                        emailInput.value = userData["email"];\r\n                        let autoBox = document.getElementById("autocomplete-div");\r\n                        mainInputParent.removeChild(autoBox);\r\n                        mainInput.dataset.userSelected = \'true\';\r\n                        mainInput.classList.add(\'canSubmit\');\r\n                        e.stopImmediatePropagation();\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if(e.code === "Escape") {\r\n            let autoBox = document.getElementById("autocomplete-div");\r\n            mainInputParent.removeChild(autoBox);\r\n        }\r\n    });\r\n    mainInput.addEventListener("keyup",  (v) => {\r\n        let alphabet = \'abcdefghijklmnopqrstuvwxyz\'.split(\'\');\r\n        if(alphabet.indexOf(v.key.toLowerCase()) !== -1) {\r\n            window.clearTimeout(timer);\r\n            timer = setTimeout(async () => {\r\n                let autocompleteBox = document.getElementById("autocomplete-div");\r\n                if (!autocompleteBox) {\r\n                    autocompleteBox = document.createElement("div");\r\n                    autocompleteBox.setAttribute("id", "autocomplete-div");\r\n                    autocompleteBox.style.width = `${mainInput.parentElement.clientWidth}px`;\r\n                    mainInputParent.appendChild(autocompleteBox);\r\n                } else {\r\n                    while (autocompleteBox.childElementCount > 0) {\r\n                        autocompleteBox.removeChild(autocompleteBox.children[0]);\r\n                    }\r\n                }\r\n\r\n                let q = v.target.value;\r\n                let userObjects = await getIntellisense(q);\r\n                users = userObjects\r\n                let usersArr = [];\r\n                for (let i = 0; i < userObjects.length; i++) {\r\n                    if (userObjects[i].name.substring(0, q.length).toLowerCase() === q.toLowerCase()) {\r\n                        usersArr.push(userObjects[i].name);\r\n                    }\r\n                }\r\n                usersArr.sort();\r\n                for (let i = 0; i < usersArr.length; i++) {\r\n                    let autoSpan = document.createElement("span");\r\n                    autoSpan.setAttribute("class", "autocomplete-item");\r\n                    autoSpan.innerHTML = "<strong>" + usersArr[i].substring(0, q.length) + "</strong>";\r\n                    autoSpan.innerHTML += usersArr[i].substring(q.length);\r\n                    autoSpan.setAttribute("name", usersArr[i]);\r\n                    autocompleteBox.appendChild(autoSpan);\r\n                    autoSpan.addEventListener("click", async () => {\r\n                        for (let j = 0; j < userObjects.length; j++) {\r\n                            if (userObjects[j].name === usersArr[i]) {\r\n                                let userData = userObjects[j];\r\n                                mainInput.value = userData["name"];\r\n                                usernameInput.value = userData["username"];\r\n                                firstnameInput.value = userData["first_name"];\r\n                                lastnameInput.value = userData["last_name"];\r\n                                emailInput.value = userData["email"];\r\n                                let autoBox = document.getElementById("autocomplete-div");\r\n                                mainInputParent.removeChild(autoBox);\r\n                                mainInput.dataset.userSelected = \'true\';\r\n                                mainInput.classList.add(\'canSubmit\');\r\n                                break;\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }, timeoutVal);\r\n        }\r\n    });\r\n}\n;// ./src/js/localDBAutocomplete.js\n// ********** Imports **********\r\n\r\n\r\n\r\nlet firstNameInput = document.getElementById("memberFirstName");\r\nlet lastNameInput = document.getElementById("memberLastName");\r\nlet autoInputs = document.getElementsByClassName("local-autocomplete");\r\n\r\nif (autoInputs.length > 0) {\r\n    // ********** Header search logic **********\r\n    let searchInput;\r\n    let searchInputDiv;\r\n    let inputTimeout = 500;\r\n    let dropdownDivActive = false;\r\n    let dropdownDiv;\r\n    let activeTimeout;\r\n    // relating to the dropdown list\r\n    let currentItem;\r\n    for (let i = 0; i < autoInputs.length; i++) {\r\n        let input = autoInputs[i];\r\n        input.addEventListener("input", () => {\r\n            let type = input.dataset.type;\r\n            let filter = input.dataset.filter;\r\n            searchInput = input;\r\n            searchInputDiv = input.parentElement;\r\n            clearTimeout(activeTimeout)\r\n            activeTimeout = setTimeout(async () => {\r\n                let q = searchInput.value;\r\n                if (q !== "") {\r\n                    let queryData = {\r\n                        type: type,\r\n                        filter: filter,\r\n                        q: q,\r\n                    }\r\n                    let res = JSON.parse(await getInstances(queryData));\r\n                    if (res.error) {\r\n                        console.log(res.message);\r\n                    } else {\r\n                        if (res.length > 0) {\r\n                            if (dropdownDivActive === false) {\r\n                                // created the list div\r\n                                createDropDownDiv(searchInputDiv);\r\n                                dropdownDivActive = true;\r\n                            }\r\n\r\n                            // removing all user suggestions from old search\r\n                            removeDropDownChildren(dropdownDiv);\r\n\r\n                            for (let i = 0; i < res.length; i++) {\r\n                                let user = res[i];\r\n                                // creating each list item\r\n                                let span = document.createElement("span");\r\n                                span.className = "user-dropdown-item";\r\n                                if (filter.includes("_name")) {\r\n                                    span.dataset.data = JSON.stringify({\r\n                                        id: user["id"],\r\n                                        firstName: user["firstName"],\r\n                                        lastName: user["lastName"],\r\n                                        inputId: input.id,\r\n                                    });\r\n                                    span.innerText = `${user["firstName"]} ${user["lastName"]}`;\r\n                                } else {\r\n                                    span.dataset.data = JSON.stringify({\r\n                                        id: user["id"],\r\n                                        name: user["name"],\r\n                                        inputId: input.id,\r\n                                    });\r\n                                    span.innerText = `${user["name"]}`;\r\n                                }\r\n                                addListener("mouseup", span);\r\n                                dropdownDiv.appendChild(span);\r\n                            }\r\n\r\n                            // adding listeners to the users list\r\n                            addListener("keydown", searchInput, Array.from(dropdownDiv.children));\r\n                            addListener("focusout", searchInput);\r\n                        }\r\n                    }\r\n                } else {\r\n                    dropdownDivActive = false;\r\n                    removeListener("keydown", searchInput);\r\n                    removeListener("focusout", searchInput);\r\n                }\r\n            }, inputTimeout);\r\n        });\r\n    }\r\n\r\n    // ***** Header search functions *****\r\n    function createDropDownDiv(parent) {\r\n        dropdownDiv = document.createElement("div");\r\n        dropdownDiv.id = "usersDiv";\r\n        parent.appendChild(dropdownDiv);\r\n    }\r\n\r\n    function removeDropDownDiv(parent, elId) {\r\n        let el = document.getElementById(elId);\r\n        if (el) {\r\n            parent.removeChild(el)\r\n        }\r\n    }\r\n\r\n    function removeDropDownChildren(parent) {\r\n        while (parent.childElementCount > 0) {\r\n            parent.removeChild(parent.firstElementChild);\r\n        }\r\n    }\r\n\r\n    function selectUser(data) {\r\n        let fnInput;\r\n        let lnInput;\r\n        let nameInput;\r\n        let input = document.getElementById(data["inputId"]);\r\n        let inputFilter = input.dataset.filter;\r\n        if (inputFilter === "first_name" ||  inputFilter === "last_name") {\r\n            if (inputFilter === "first_name") {\r\n                fnInput = input;\r\n                lnInput = fnInput.parentElement.nextElementSibling.firstElementChild;\r\n                lnInput.focus();\r\n            } else {\r\n                lnInput = input;\r\n                fnInput = lnInput.parentElement.previousElementSibling.firstElementChild;\r\n                fnInput.focus();\r\n            }\r\n            fnInput.value = data["firstName"];\r\n            lnInput.value = data["lastName"];\r\n        } else {\r\n            nameInput = input;\r\n            nameInput.value = data["name"];\r\n            nameInput.blur(); // removes focus from an element\r\n        }\r\n    }\r\n\r\n    const keyDownFunction = (ev, refList = null) => {\r\n        let currentItem = getCurrentItem();\r\n        let itemIndex = !currentItem ? 0 : refList.indexOf(currentItem);\r\n        let nextItem = refList[itemIndex] === refList[refList.length - 1] ? refList[0] : refList[itemIndex + 1];\r\n        let previousItem = refList[itemIndex] === refList[0] ? refList[refList.length - 1] : refList[itemIndex - 1];\r\n        let newCurrentItem;\r\n        switch(ev.key) {\r\n            case "ArrowDown":\r\n                newCurrentItem = !currentItem ? refList[0] : nextItem;\r\n                // adding the active class to the current Item\r\n                newCurrentItem.classList.add("active-item");\r\n                // removing the active class from previous item\r\n                refList.filter(item => {\r\n                    if (item.className.includes("active-item") && item !== newCurrentItem) {\r\n                        item.classList.remove("active-item");\r\n                    }\r\n                });\r\n                // setting the new currentIndex\r\n                setCurrentItem(newCurrentItem);\r\n                break;\r\n            case "ArrowUp":\r\n                newCurrentItem = previousItem;\r\n                // adding the active class to the current Item\r\n                newCurrentItem.classList.add("active-item");\r\n                // removing the active class from previous item\r\n                refList.filter(item => {\r\n                    if (item.className.includes("active-item") && item !== newCurrentItem) {\r\n                        item.classList.remove("active-item");\r\n                    }\r\n                });\r\n                // setting the new currentIndex\r\n                setCurrentItem(newCurrentItem);\r\n                break;\r\n            case "Escape":\r\n                removeDropDownDiv(searchInputDiv, dropdownDiv.id);\r\n                break;\r\n            case "Enter":\r\n                let activeItem = dropdownDiv.querySelector(".active-item");\r\n                let data = JSON.parse(activeItem.dataset.data);\r\n                selectUser(data);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    function focusOutFunction() {\r\n        setTimeout(() => {\r\n            removeDropDownDiv(searchInputDiv, dropdownDiv.id);\r\n        }, 250);\r\n    }\r\n\r\n    function clickFunction(ev) {\r\n        let data = JSON.parse(ev.target.dataset.data);\r\n        selectUser(data);\r\n    }\r\n\r\n    function getCurrentItem() {\r\n        return currentItem\r\n    }\r\n\r\n    function setCurrentItem(newItem) {\r\n        currentItem = newItem;\r\n    }\r\n\r\n    // ***** Header search listeners *****\r\n    let eventTypes = {\r\n        keydown: keyDownFunction,\r\n        focusout: focusOutFunction,\r\n        mouseup: clickFunction,\r\n    }\r\n\r\n    function addListener(type, el, refList=null) {\r\n        el.addEventListener(type, (ev) => eventTypes[type](ev, refList));\r\n    }\r\n\r\n    function removeListener(type, el) {\r\n        el.removeEventListener(type, eventTypes[type]);\r\n    }\r\n}\n;// ./src/js/administration.js\n// ********** Imports **********\r\n\r\n\r\n\r\n// ***** Script Functions *****\r\n// adding the selected user to the table\r\n// takes 3 arguments: data = <JSON>{objectData}, <str>tableId, <str>membership\r\nfunction addRowToTable(data, tableId, membership) {\r\n    let memberId = data["id"];\r\n    delete data["id"];\r\n    // getting table\r\n    let table = document.getElementById(tableId);\r\n    // getting the tbody\r\n    let tbody = table.querySelector("tbody");\r\n    // create tr\r\n    let tr = document.createElement("tr");\r\n    tr.id = `member-${memberId}`;\r\n    tbody.appendChild(tr);\r\n    // creating the table data\r\n    for (let key in data) {\r\n        let td = document.createElement("td");\r\n        td.innerText = data[key];\r\n        tr.appendChild(td);\r\n    }\r\n    // adding the action links\r\n    let actionsTd = document.createElement("td");\r\n    actionsTd.className = "d-flex justify-content-evenly"\r\n    if (membership === "member") {\r\n        actionsTd.innerHTML = `<a role="button" class="member-remove-btn text-danger" data-member-id="${memberId}" title="Remove member"><i class="fa-solid fa-square-minus"></i></a> | \r\n                                <a role="button" class="upgrade-to-owner-btn text-success" data-member-id="${memberId}" title="Make owner"><i class="fa-solid fa-arrow-up-from-bracket"></i></a>`;\r\n    } else if (membership === "owner") {\r\n        if (tableId === "membersTable") {\r\n            actionsTd.innerHTML = `<a role="button" class="member-remove-btn text-danger disabled" data-member-id="${memberId}" title="Can\'t remove because the member is an owner.<br>To remove from group, remove them from the owners tab."><i class="fa-solid fa-square-minus"></i></a>`;\r\n        } else {\r\n            actionsTd.innerHTML = `<a role="button" class="owner-remove-btn" data-member-id="${memberId}"><i class="fa-solid fa-square-minus"></i></a>`\r\n        }\r\n    } else {\r\n        actionsTd.innerHTML = `<a role="button" class="table-remove-btn text-danger" data-table-id="${memberId}" title="Remove table"><i class="fa-solid fa-square-minus"></i></a>`;\r\n    }\r\n    tr.appendChild(actionsTd);\r\n}\r\n\r\nasync function removeMember(memberId, groupId, membership, fullRemove=false) {\r\n    let res = await fetches.removeMemberFromGroup(memberId, groupId, membership, fullRemove);\r\n}\r\n\r\n// ***** Script Variables *****\r\nlet currentUrl = new URL(document.URL);\r\n\r\nif (currentUrl.pathname.includes("/administration/")) {\r\n    window.addEventListener("DOMContentLoaded", async function () {\r\n        // ***** User Logic *****\r\n\r\n        // ***** Group Logic *****\r\n        if (currentUrl.pathname.includes("/administration/view-group/")) {\r\n            const groupId = parseInt(/view-group\\/(?<groupId>\\d+)\\//g.exec(currentUrl.pathname).groups.groupId);\r\n            let memberAddBtn = document.getElementById("memberAddBtn");\r\n            let ownerAddBtn = document.getElementById("ownerAddBtn");\r\n            let tableAddBtn = document.getElementById("tableAddBtn");\r\n\r\n            memberAddBtn.addEventListener("click", async function () {\r\n                let memberFirstName = document.getElementById("memberFirstName").value;\r\n                let memberLastName = document.getElementById("memberLastName").value;\r\n                let filterBy = {\r\n                    filter_by: {\r\n                        "first_name": memberFirstName,\r\n                        "last_name": memberLastName,\r\n                    }\r\n                }\r\n                // check to make sure the user exists within the database (ldap excluded)\r\n                let res = await checkUserExists(filterBy);\r\n                if (res.exists) {\r\n                    let addRes = await saveMemberToGroup(res.user.id, groupId);\r\n                    if (addRes.success) {\r\n                        addRowToTable({\r\n                            id: res.user.id,\r\n                            firstName: res.user.first_name,\r\n                            lastName: res.user.last_name,\r\n                        }, "membersTable", "member");\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\n;// ./src/main.js\n\r\n\r\n\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///787\n')},825:module=>{eval('\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = "";\n  if (obj.supports) {\n    css += "@supports (".concat(obj.supports, ") {");\n  }\n  if (obj.media) {\n    css += "@media ".concat(obj.media, " {");\n  }\n  var needLayer = typeof obj.layer !== "undefined";\n  if (needLayer) {\n    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += "}";\n  }\n  if (obj.media) {\n    css += "}";\n  }\n  if (obj.supports) {\n    css += "}";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== "undefined") {\n    css += "\\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === "undefined") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODI1LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtEO0FBQ2xEO0FBQ0E7QUFDQSwwQ0FBMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0EsaUZBQWlGO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EseURBQXlEO0FBQ3pEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGFibGV2aWV3ZXIvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcz9lNDc5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cbiAgY3NzICs9IG9iai5jc3M7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH1cblxuICAvLyBGb3Igb2xkIElFXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7fSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICB9O1xuICB9XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///825\n')}},__webpack_module_cache__={};function __webpack_require__(I){var g=__webpack_module_cache__[I];if(void 0!==g)return g.exports;var C=__webpack_module_cache__[I]={id:I,exports:{}};return __webpack_modules__[I](C,C.exports,__webpack_require__),C.exports}__webpack_require__.n=I=>{var g=I&&I.__esModule?()=>I.default:()=>I;return __webpack_require__.d(g,{a:g}),g},__webpack_require__.d=(I,g)=>{for(var C in g)__webpack_require__.o(g,C)&&!__webpack_require__.o(I,C)&&Object.defineProperty(I,C,{enumerable:!0,get:g[C]})},__webpack_require__.o=(I,g)=>Object.prototype.hasOwnProperty.call(I,g),__webpack_require__.nc=void 0;var __webpack_exports__=__webpack_require__(787)})();